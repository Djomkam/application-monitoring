version: '3.7'
services:
  prometheus:
    image: prom/prometheus:v2.54.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./src/main/resources/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    networks:
      - monitoring-network

  pushgateway:
    image: prom/pushgateway:v1.7.0
    container_name: pushgateway
    ports:
      - "9091:9091"
    networks:
      - monitoring-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./src/main/resources/config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - monitoring-network
    depends_on:
      - prometheus

  monitoring-metrics:
    build:
      context: ./monitoring-metrics
      dockerfile: Dockerfile
    container_name: monitoring-metrics
    ports:
      - "8081:8081"
    environment:
      - SPRING_APPLICATION_NAME=monitoring-metrics
      - SPRING_APPLICATION_INSTANCE=instance-1
      - PROMETHEUS_PUSHGATEWAY_URL=http://pushgateway:9091
    networks:
      - monitoring-network
    depends_on:
      - prometheus
      - pushgateway

  monitoring-dashboard:
    build:
      context: ./monitoring-dashboard
      dockerfile: Dockerfile
    container_name: monitoring-dashboard
    ports:
      - "8082:8082"
    environment:
      - GRAFANA_URL=http://grafana:3000
      - GRAFANA_USERNAME=admin
      - GRAFANA_PASSWORD=admin
      - PROMETHEUS_URL=http://prometheus:9090
    networks:
      - monitoring-network
    depends_on:
      - grafana
      - prometheus

networks:
  monitoring-network:
    driver: bridge
